{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jasper\\\\source\\\\repos\\\\react-Ecommerce\\\\Client\\\\src\\\\components\\\\Product.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ProductItem from './ProductItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n`;\n_c = Container;\n\nconst Product = _ref => {\n  _s();\n\n  let {\n    cat,\n    filter,\n    sort\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [filterProducts, setFilterProducts] = useState([]); //向後端拿產品資訊(分為1.有category 2.全拿)\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const res = await axios.get(cat ? `http://localhost:5000/api/product?category=${cat}` : 'http://localhost:5000/api/product'); // console.log(res);\n\n        setProducts(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getProducts();\n  }, [cat]); // console.log(products);\n  // const productsArray = products.filter((item) => item.title === '外套');\n  // products.length !== 0 &&\n  // \t// console.log('productsArray', productsArray[0]['color']);\n  // \tconsole.log('products', products);\n  // 透過select篩選，顯示特定產品\n\n  useEffect(() => {\n    //將object 全然轉為 array\n    console.log('object', filter);\n    const categoryArray = filter ? Object.entries(filter) : [];\n    console.log('array', categoryArray);\n    let productCatFilterAry = products.filter(item => {\n      return categoryArray.every(_ref2 => {\n        let [key, value] = _ref2;\n        return item[key].includes(value); //例如: item['color'] 內是否有包含 \"綠色\"(value)\n      });\n    });\n    console.log(productCatFilterAry);\n    setFilterProducts(productCatFilterAry);\n  }, [cat, filter, products]);\n  useEffect(() => {\n    console.log('sort ');\n  }, [sort]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: filterProducts.map(item => /*#__PURE__*/_jsxDEV(ProductItem, {\n      item: item\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Product, \"UvizJDL/Mx/gc6yjzb3e8ZBaLeI=\");\n\n_c2 = Product;\nexport default Product;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Product\");","map":{"version":3,"sources":["C:/Users/jasper/source/repos/react-Ecommerce/Client/src/components/Product.jsx"],"names":["axios","React","useState","useEffect","styled","ProductItem","Container","div","Product","cat","filter","sort","products","setProducts","filterProducts","setFilterProducts","getProducts","res","get","data","error","console","log","categoryArray","Object","entries","productCatFilterAry","item","every","key","value","includes","map","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA,CAJA;KAAMD,S;;AAMN,MAAME,OAAO,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA;AAAf,GAA0B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD,CAF0C,CAI1C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,WAAW,GAAG,YAAY;AAC/B,UAAI;AACH,cAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACjBT,GAAG,GACC,8CAA6CA,GAAI,EADlD,GAEA,mCAHc,CAAlB,CADG,CAMH;;AACAI,QAAAA,WAAW,CAACI,GAAG,CAACE,IAAL,CAAX;AACA,OARD,CAQE,OAAOC,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,KAZD;;AAaAJ,IAAAA,WAAW;AACX,GAfQ,EAeN,CAACP,GAAD,CAfM,CAAT,CAL0C,CAsB1C;AACA;AACA;AACA;AACA;AAEA;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACf;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,MAAtB;AACA,UAAMa,aAAa,GAAGb,MAAM,GAAGc,MAAM,CAACC,OAAP,CAAef,MAAf,CAAH,GAA4B,EAAxD;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,aAArB;AAEA,QAAIG,mBAAmB,GAAGd,QAAQ,CAACF,MAAT,CAAiBiB,IAAD,IAAU;AACnD,aAAOJ,aAAa,CAACK,KAAd,CAAoB,SAAkB;AAAA,YAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;AAC5C,eAAOH,IAAI,CAACE,GAAD,CAAJ,CAAUE,QAAV,CAAmBD,KAAnB,CAAP,CAD4C,CAE5C;AACA,OAHM,CAAP;AAIA,KALyB,CAA1B;AAOAT,IAAAA,OAAO,CAACC,GAAR,CAAYI,mBAAZ;AACAX,IAAAA,iBAAiB,CAACW,mBAAD,CAAjB;AACA,GAfQ,EAeN,CAACjB,GAAD,EAAMC,MAAN,EAAcE,QAAd,CAfM,CAAT;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,GAFQ,EAEN,CAACX,IAAD,CAFM,CAAT;AAIA,sBACC,QAAC,SAAD;AAAA,cACEG,cAAc,CAACkB,GAAf,CAAoBL,IAAD,iBACnB,QAAC,WAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAkBA,IAAI,CAACM,GAAvB;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAzDD;;GAAMzB,O;;MAAAA,O;AA2DN,eAAeA,OAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport ProductItem from './ProductItem';\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst Product = ({ cat, filter, sort }) => {\r\n\tconst [products, setProducts] = useState([]);\r\n\tconst [filterProducts, setFilterProducts] = useState([]);\r\n\r\n\t//向後端拿產品資訊(分為1.有category 2.全拿)\r\n\tuseEffect(() => {\r\n\t\tconst getProducts = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.get(\r\n\t\t\t\t\tcat\r\n\t\t\t\t\t\t? `http://localhost:5000/api/product?category=${cat}`\r\n\t\t\t\t\t\t: 'http://localhost:5000/api/product'\r\n\t\t\t\t);\r\n\t\t\t\t// console.log(res);\r\n\t\t\t\tsetProducts(res.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\t\tgetProducts();\r\n\t}, [cat]);\r\n\r\n\t// console.log(products);\r\n\t// const productsArray = products.filter((item) => item.title === '外套');\r\n\t// products.length !== 0 &&\r\n\t// \t// console.log('productsArray', productsArray[0]['color']);\r\n\t// \tconsole.log('products', products);\r\n\r\n\t// 透過select篩選，顯示特定產品\r\n\tuseEffect(() => {\r\n\t\t//將object 全然轉為 array\r\n\t\tconsole.log('object', filter);\r\n\t\tconst categoryArray = filter ? Object.entries(filter) : [];\r\n\t\tconsole.log('array', categoryArray);\r\n\r\n\t\tlet productCatFilterAry = products.filter((item) => {\r\n\t\t\treturn categoryArray.every(([key, value]) => {\r\n\t\t\t\treturn item[key].includes(value);\r\n\t\t\t\t//例如: item['color'] 內是否有包含 \"綠色\"(value)\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconsole.log(productCatFilterAry);\r\n\t\tsetFilterProducts(productCatFilterAry);\r\n\t}, [cat, filter, products]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('sort ');\r\n\t}, [sort]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{filterProducts.map((item) => (\r\n\t\t\t\t<ProductItem key={item._id} item={item}></ProductItem>\r\n\t\t\t))}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Product;\r\n"]},"metadata":{},"sourceType":"module"}