{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jasper\\\\source\\\\repos\\\\react-Ecommerce\\\\client\\\\src\\\\page\\\\Pay.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // 公鑰\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicKey = 'pk_test_51KRZybEJjCXNnxR5ij9PbaJhGJ7iugxEpchRjqCDBA3hRBBTs6JdFocistUinSlU45fx9Bnrl4cJYtH870RXc7jV00ZHmL21je';\nconst Container = styled.div`\n\theight: 100vh;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n_c = Container;\nconst Button = styled.button`\n\tborder: none;\n\twidth: 120px;\n\tborder-radius: 5px;\n\tpadding: 20px;\n\tbackground-color: 'black';\n\tcolor: '#fff';\n\tfont-weight: 600;\n\tcursor: pointer;\n`;\n_c2 = Button;\n\nconst Pay = () => {\n  _s();\n\n  const [stripeToken, setStripeToken] = useState(null); // 回傳token 資料\n\n  const onToken = token => {\n    setStripeToken(token); // console.log(token);\n  };\n\n  useEffect(() => {\n    const makeRequest = async () => {\n      try {\n        // console.log(stripeToken.id);\n        const res = await axios.post('http://localhost:5000/api/checkout/payment', {\n          tokenId: stripeToken.id,\n          amount: 2990000\n        });\n        console.log(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      name: \"Jasper Shop\",\n      description: \"\\u8CFC\\u7269\\u4ED8\\u6B3E\",\n      image: \"./assets/product/product2.jpg\",\n      billingAddress: true,\n      shippingAddress: true,\n      amount: 299900,\n      token: onToken,\n      stripeKey: PublicKey,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u4ED8\\u6B3E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Pay, \"BlVBgrMd06Pf5kbOjvl5eJREhqY=\");\n\n_c3 = Pay;\nexport default Pay;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Pay\");","map":{"version":3,"sources":["C:/Users/jasper/source/repos/react-Ecommerce/client/src/page/Pay.jsx"],"names":["styled","StripeCheckout","useEffect","useState","axios","PublicKey","Container","div","Button","button","Pay","stripeToken","setStripeToken","onToken","token","makeRequest","res","post","tokenId","id","amount","console","log","data","error"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,SAAS,GACd,6GADD;AAGA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,MAAM,GAAGR,MAAM,CAACS,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,M;;AAWN,MAAME,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C,CADiB,CAGjB;;AACA,QAAMU,OAAO,GAAIC,KAAD,IAAW;AAC1BF,IAAAA,cAAc,CAACE,KAAD,CAAd,CAD0B,CAE1B;AACA,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,WAAW,GAAG,YAAY;AAC/B,UAAI;AACH;AACA,cAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CACjB,4CADiB,EAEjB;AACCC,UAAAA,OAAO,EAAEP,WAAW,CAACQ,EADtB;AAECC,UAAAA,MAAM,EAAE;AAFT,SAFiB,CAAlB;AAOAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,IAAhB;AACA,OAVD,CAUE,OAAOC,KAAP,EAAc;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA;AACD,KAdD;;AAeAb,IAAAA,WAAW,IAAII,WAAW,EAA1B;AACA,GAjBQ,EAiBN,CAACJ,WAAD,CAjBM,CAAT;AAmBA,sBACC,QAAC,SAAD;AAAA,2BAEC,QAAC,cAAD;AACC,MAAA,IAAI,EAAC,aADN;AAEC,MAAA,WAAW,EAAC,0BAFb;AAGC,MAAA,KAAK,EAAC,+BAHP;AAIC,MAAA,cAAc,MAJf;AAKC,MAAA,eAAe,MALhB;AAMC,MAAA,MAAM,EAAE,MANT;AAOC,MAAA,KAAK,EAAEE,OAPR;AAQC,MAAA,SAAS,EAAER,SARZ;AAAA,6BAUC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA7CD;;GAAMK,G;;MAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import styled from 'styled-components';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// 公鑰\r\nconst PublicKey =\r\n\t'pk_test_51KRZybEJjCXNnxR5ij9PbaJhGJ7iugxEpchRjqCDBA3hRBBTs6JdFocistUinSlU45fx9Bnrl4cJYtH870RXc7jV00ZHmL21je';\r\n\r\nconst Container = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tborder: none;\r\n\twidth: 120px;\r\n\tborder-radius: 5px;\r\n\tpadding: 20px;\r\n\tbackground-color: 'black';\r\n\tcolor: '#fff';\r\n\tfont-weight: 600;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst Pay = () => {\r\n\tconst [stripeToken, setStripeToken] = useState(null);\r\n\r\n\t// 回傳token 資料\r\n\tconst onToken = (token) => {\r\n\t\tsetStripeToken(token);\r\n\t\t// console.log(token);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst makeRequest = async () => {\r\n\t\t\ttry {\r\n\t\t\t\t// console.log(stripeToken.id);\r\n\t\t\t\tconst res = await axios.post(\r\n\t\t\t\t\t'http://localhost:5000/api/checkout/payment',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttokenId: stripeToken.id,\r\n\t\t\t\t\t\tamount: 2990000,\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\t\tstripeToken && makeRequest();\r\n\t}, [stripeToken]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{/* react-stripe-checkout 設定資料*/}\r\n\t\t\t<StripeCheckout\r\n\t\t\t\tname=\"Jasper Shop\"\r\n\t\t\t\tdescription=\"購物付款\"\r\n\t\t\t\timage=\"./assets/product/product2.jpg\"\r\n\t\t\t\tbillingAddress\r\n\t\t\t\tshippingAddress\r\n\t\t\t\tamount={299900}\r\n\t\t\t\ttoken={onToken}\r\n\t\t\t\tstripeKey={PublicKey}\r\n\t\t\t>\r\n\t\t\t\t<Button>付款</Button>\r\n\t\t\t</StripeCheckout>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Pay;\r\n"]},"metadata":{},"sourceType":"module"}